【1】线性：元素之间是线性关系，即表中元素最多一个直接前驱和一个直接后继；
【2】树：元素之间是层次关系。除根外，元素只有唯一直接前驱，但可以有若干个直接后继； 
【3】图：任意的两个元素都可能相关，即图中任一元素可以有若干个直接前驱和直接后继，属于网状结构类型。 
【4】树是图的特例――有向无环图。

【5】有向图
	 < Vi , Vj >  

【6】无向图
	（Vi , Vj）或（Vj , Vi）


【7】图的条数链接最多时，可称为完全图。

【8】网：
	若在图的关系<Vi,Vj>或(Vi,Vj)上附加一个值w：
	称w为弧或边上的权。带权的图称为网。


【9】邻接点：
	设E为图中边的集合，V、V’为图中的顶点。若（V,V’）∈E，
	则称V和V’互为邻接点

【10】连通图：
	在无向图中，若图中任意两顶点都连通，则称该图为无向连通图。
	两顶点V与V‘间存在路径，称V与V’是连通的。


【11】图的存储（邻接矩阵法）
	
	

【12】DFS

算法思路
1、设初始时，图中各顶点均未被访问；
2、从图中某顶点（设为V0）出发，访问V0，然后搜索V0的一个邻接点Vi，若Vi未被访问，则访问之，再搜索Vi的一个邻接点（深度优先）……
3、若某顶点的邻接点全部访问完毕，则回溯（Backtracking）到它的上一顶点，然后再从此顶点又按深度优先的方法搜索下去……



【13】BFS
算法思路
类似树的按层次遍历。初始时，图中各顶点均未被访问，从图中某顶点（设V0）出发，访问V0，并依次访问V0的各邻接点（广度优先）。然后，分别从这些被访问过的顶点出发，仍按照广度优先的策略搜索其它顶点，……，直到能访问的顶点都访问完毕为止。
为控制广度优先的正确搜索，要用到队列技术，即访问完一个顶点后，让该顶点的序号进队。然后取相应队头（出队），考察访问过的顶点的各邻接点，将未访问过的邻接点访问后再依次进队，……，直到队空为止。



【14】HASH
Hash表
又称散列表。在前面讨论的顺序、折半、分块查找和树表的查找中，其ASL的量级在O(n)～O(log2n)之间。不论ASL在哪个量级，都与记录长度n有关。随着n的扩大，算法的效率会越来越低。ASL与n有关是因为记录在存储器中的存放是随机的，或者说记录的key与记录的存放地址无关，因而查找只能建立在key的“比较”基础上。
理想的查找方法是：对给定的k，不经任何比较便能获取所需的记录，其查找的时间复杂度为常数级O(C)。这就要求在建立记录表的时候，确定记录的key与其存储地址之间的关系f，
即：使key与记录的存放地址H相对应,或者说，记录按key存放。









