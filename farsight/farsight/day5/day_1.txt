【1】数据结构
1--数据：能输入到计算机中，并且被计					算机识别、存储、处理的符号               总称。
2―数据元素：每个个体的信息
3―数据项，每个个体信息的属性
4―结构：看做是一种关系
数据结构：研究数据的数据元素之间的关系的学科。
【2】数据结构指的是数据的逻辑结构和存储结构及其操作;
1--逻辑结构：表示数据运算之间的抽象关系（如邻接关系、从属关系等），按每个元素可能具有的直接前趋数和直接后继数将逻辑结构分为“线性结构”和“非线性结构”两大类。
 线性关系：一对一的关系，（除了头和尾）
 层次关系（树形关系）：一对多的关系（除了根节点）
图形关系（网状关系）：多对多的关系

2--存储结构   

顺序存储结构―借助元素在存储器中的相对位置来表示数据元素间的逻辑关系
在内存中连续
优点：遍历方便，可以大量处理数据类型相同的数据
缺点：数据类型必须统一，插入删除不方便，空间可能不够可能浪费

链式存储结构―借助指示元素存储地址的指针表示数据元素间的逻辑关系
优点：空间充分利用，插入删除方便
缺点：遍历不方便
索引存储：在存储数据的同时，建立一个附加的索引表，即索引存储结构=数据文件+索引表。 
散列存储(Hash Structure)： 
     根据数据元素的特殊字段(称为关键字key)，计算数据元素的存放地址，然后数据元素按地址存放，所得到的存储结构为散列存储结构(或Hash结构)。


3--运算：增 删 改 查

【3】线性表
逻辑结构：线性结构
存储结构：顺序存储
运算：增 删 改 查

【4】练习
线性表La：1 2 3 4
线性表Lb：3 4 5 6 7
合并后
线性表La：1 2 3 4 5 6 7
线性表Lb：3 4 5 6 7

【5】链表
逻辑结构：线性关系
存储结构：链式存储
运算：增 删 改 查

typedef int a;
a b;
typedef int * p;
p q;
typedef struct node
{
		int data;
		struct node *next;
}*linknode_t,linknode;
typedef struct node linknode;
typedef struct node * linknode_t;
linknode_t q;

